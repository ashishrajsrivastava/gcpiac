# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
  - stage: plan_gcp_tf
    displayName: "Planning GCP resource using tf"
    jobs:
      - job: planingtf
        pool:
          name: 'Azure Pipelines'
          vmImage:  'windows-latest'
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: '0.12.6'
          - task: TerraformCLI@0
            displayName: 'Initializing Terraform'
            inputs:
              command: 'init'
          - task: PowerShell@2
            displayName: 'Terraform Plan'
            env:
              GOOGLE_CREDENTIALS: $(google_credentials)
              BILLING_AC_ID: $(billing_ac_id)
            inputs:
              targetType: 'inline'
              script: |
                # terraform plan.
                
                terraform plan -var project_id=$env:project_id -var billing_ac_id=$env:billing_ac_id
  - stage: deploy_tf
    displayName: "deploy tf resources in GCP"
    jobs:
      - job: tf_apply_job
        pool:
          name: 'Azure Pipelines'
          vmImage:  'windows-latest'
        steps:
          - task: PowerShell@2
            env:
              GOOGLE_CREDENTIALS: $(google_credentials)
              BILLING_AC_ID: $(billing_ac_id)
            inputs:
              targetType: 'inline'
              script: |
                # terraform apply
                terraform plan -var project_id=$env:project_id -var billing_ac_id=$env:billing_ac_id